name: CI

# when the workflow will run
on:
  push:
    branches: [ master ]
  pull_request:

  # Allows manually starting this workflow from the Actions tab
  workflow_dispatch:

jobs:
  generate-matrix:
    name: Generate GHC build matrix
    runs-on: ubuntu-latest
    outputs:
      ghc-matrix: ${{ steps.set-ghc-matrix.outputs.versions }}
    steps:
      - id: set-ghc-matrix
        run: echo "::set-output name=versions::{\"ghc-version\":[\"8.10.7\", \"9.2\", \"9.4\"]}"

  build:
    name: Build Check
    needs: generate-matrix
    runs-on: ubuntu-latest
    strategy:
      # Whether to stop other jobs in the matrix if one fails. This is undesirable
      # since we want to check e.g. it compiles on 8.10.7 regardless of the status
      # of 9.X.
      fail-fast: false
      # Feed the json from the previous job.
      matrix: ${{ fromJson(needs.generate-matrix.outputs.ghc-matrix) }}
    steps:
      - uses: actions/checkout@v2

      - uses: haskell/actions/setup@v2
        id: setup-haskell
        with:
          # The system GHC version
          ghc-version: ${{ matrix.ghc-version }}
          enable-stack: true

      - name: "Cabal: Update cabal package database"
        run: |
          cabal update
          cabal configure

      - name: "Cabal: Cache Dependencies"
        id: cache
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-${{ matrix.ghc-version }}-${{ hashFiles('**/plan.json') }}
          path: |
            ${{ steps.setup-haskell.outputs.cabal-store }}
            dist-newstyle

      - name: "Cabal: Build"
        run: cabal build

      - name: "Stack: Cache ~/.stack"
        id: cache-stack
        uses: actions/cache@v2
        with:
          path: ~/.stack
          key: ${{ runner.os }}-stack-${{ hashFiles('stack.yaml') }}
          restore-keys: |
              ${{ runner.os }}-stack
              ${{ runner.os }}

      - name: "Stack: Build"
        run: stack build --system-ghc
